{\rtf1\ansi\ansicpg1252\cocoartf1035
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;\f2\fnil\fcharset0 LucidaGrande;
}
{\colortbl;\red255\green255\blue255;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid1\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\vieww9000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\b\fs22 \cf0 QTCoreVideo201
\f1\b0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural
\cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\b \cf0 Description
\b0 :\
\
\pard\pardeftab720\ql\qnatural

\f2 \cf0 CoreVideo201 is a Cocoa application demonstrating how to render a QuickTime Movie using OpenGL framebuffer object and the Core Video texture pipeline.\
\
This sample is the third in a series of samples demonstrating the synergy between QTKit, CoreVideo, and OpenGL. QTCoreVideo201 previously made use of the classes that were introduced in QTCoreVideo102 sample.  However, this new version is gone under a major code revision. Noteworthy changes are:\
\
\'95 Fullscreen support,\
\'95 Window resizing support,\
\'95 Open dialog code for both Leopard and Snow Leopard,\
\'95 Code refactoring of the OpenGL view class,\
\'95 Base framebuffer object class is an abstract class,\
\'95 CoreVideo specialization of the framebuffer object class,\
\'95 Display lists for quads replaced with VBOs,\
\'95 Teapot is now based on IBOs,\
\'95 Teapot IBO is initialized from a property list,\
\'95 OpenGL view pixel formats initialized from a property list,\
\'95 Alert panel class removed,\
\'95 Memory object container class removed.\
\
\ul Usage\ulnone :\
\
This sample further demonstrates how to render videos, obtained from Core Video texture pipeline, to offscreen draw buffers with the use of framebuffer objects.  By capturing images that would normally be drawn to the screen, framebuffer objects can be used to implement a large variety of image filters, and post processing effects. Framebuffer objects may be used in video processing applications for the post-processing of rendered images and composition between different scenes.  Additional benefits for using framebuffer objects in video processing is that they're easier to set up than most other methods, they do not require context switching, they're more efficient since resources are shared within the same context, and they're more flexible as one can acquire all depth buffers, stencil buffers, accumulation buffers, etc.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl380\sa20\ql\qnatural
\ls1\ilvl0\cf0 	\
\pard\pardeftab720\ql\qnatural
\cf0 \ul \ulc0 Base Classes\ulnone :\
\
\'95 OpenGLAnimation - Manages 3D object's rotation and pitch angel.\
\'95 OpenGLFBO - Manages OpenGL framebuffer objects.\
\'95 OpenGLFBOStatus - Displays framebuffer object status.\
\'95 OpenGLIBO - Utility class to acquire an indexed buffer object.\
\'95 OpenGLIBOElements - Is a utility class for obtaining parameters from a dictionary and then drawing with DrawElements.\
\'95 OpenGLIBOGeometry - Is a utility class for obtaining IBO vertices, colors, texture coordinates, and normals from a dictionary.\
\'95 OpenGLIBOIndices - Is a utility class for obtaining IBO indices from a dictionary.\
\'95 OpenGLPropertyList - Is a utility class for obtaining dictionary form a property list.\
\'95 OpenGLVBOQuad - Allows you to instantiate a VBO based Quad object.\
\'95 OpenGLView - Allows you to work with OpenGL views and interact with objects in 3D space.\
\'95 QTCVOpenGLController - Request broker between the OpenGL models and the OpenGL views.\
\'95 QTVisualContext - Utility class for maintaining Core Video PixelBuffer and Core Video OpenGL textures.\
\
\ul Derived Classes\ulnone :\
\
\'95 CVFBO - Derived from OpenGLFBO, updates a framebuffer using CV OpenGL opaque texture references.\
\'95 CVOpenGLView - Derived from OpenGLView class, adds additional functionality to render video frames into an OpenGL view.\
\'95 OpenGLIBORenderer - Derived from OpenGLIBO, is for obtaining  from a dictionary and drawing using IBO indices, normals, vertices, and DrawElements parameters.\
\'95 OpenGLPixelAttributes - Derived from  OpenGLPropertyList, is a utility class for obtaining pixel attributes for a property list.\
\'95 OpenGLPixelFormat - Derived from  OpenGLPixelAttributes, is a utility class for obtaining a valid pixel format for an OpenGL view.\
\'95 OpenGLTeapot - Derived from OpenGLIBORenderer , allows you to instantiate and display an IBO based Teapot object with a texture (bound to its surface).\
\'95 QTCVOpenGLView - Derived from CVOpenGLView, concrete view class that renders 3D objects with video frames attached as textures.\
\
This sample is part of the QTCoreVideo group of samples. Also see QTCoreVideo101, QTCoreVideo102, QTCoreVideo103, QTCoreVideo202, and QTCoreVideo301.\
\pard\pardeftab720\ql\qnatural

\f1 \cf0 \
This sample is part of the QTCoreVideo group of samples. Also see QTCoreVideo101, QTCoreVideo102, QTCoreVideo103, QTCoreVideo202, and QTCoreVideo301.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sa240\ql\qnatural
\cf0 In this sample we're using the following framework APIs:\
QTKit is used to play back a QuickTime Movie.\
QuickTime Visual Context is used as the drawing destination for the QuickTime Movie.\
NSOpenGLView is used as our view, this is where we draw a video frame on a teapot or quad.\
Core Video pipeline:\
	Movie -> Visual context -> OpenGL transforms -> OpenGL rendering ----> Hardware\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\b \cf0 What is Core Video:
\b0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sa240\ql\qnatural
\cf0 Core Video delivers a modern foundation for video services providing a bridge between QuickTime and the GPU for hardware-accelerated video processing. This highly optimized pipeline for video presentation increases performance and reduces CPU load, freeing up resources for other operations.}